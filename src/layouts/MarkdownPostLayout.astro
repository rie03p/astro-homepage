---
import type { CollectionEntry } from "astro:content";
import Layout from "./Layout.astro";
import TagList from "@/components/TagList.astro";
import { getFormatDate } from "@/utils/date";

interface Props {
  post: CollectionEntry<"post">;
}

const { post } = Astro.props;
const { Content } = await post.render();

const {
  data: { title, description, publishDate, tags },
} = post;
const articleDate = getFormatDate(publishDate);
const ogImageUrl = `/posts/ogp/${post.slug}.png`;
---

<Layout meta={{ title, articleDate, ogImage: ogImageUrl }}>
  <section class="postTitle">
    <p class="postTitle__date">Publication Date: {articleDate}</p>
    <h1 class="postTitle__title">{title}</h1>
    <TagList tagList={tags} />
  </section>
  <hr />
  <article class="postContent">
    <Content />
  </article>
</Layout>

<style lang="scss" is:global>
  html {
    scroll-behavior: smooth;
  }

  .heading-link-icon {
    width: 20px;
    height: 20px;
    opacity: 0;
    transition: opacity 0.2s;
  }

  .postContent h2:hover .heading-link-icon,
  .postContent h3:hover .heading-link-icon,
  .postContent h4:hover .heading-link-icon,
  .postContent h5:hover .heading-link-icon,
  .postContent h6:hover .heading-link-icon {
    opacity: 1;
  }

  .postTitle {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  hr {
    border-top: 1px solid #333;
  }

  .postContent {
    width: 100%;
    margin: 0 auto;
    padding: 0 1rem;
    font-size: 1rem;
    line-height: 1.75;
    color: #333;
    text-align: left;

    /* 見出しのスタイル */
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      display: flex;
      font-weight: 700;
      margin: 2rem 0 1rem;
      line-height: 1.25;

      img {
        margin: 0 0.5rem;
      }
    }

    h1 {
      font-size: 2rem;
      border-bottom: 2px solid #eaeaea;
      padding-bottom: 0.3em;
    }

    h2 {
      font-size: 1.75rem;
      border-bottom: 1px solid #eaeaea;
      padding-bottom: 0.3em;
    }

    h3 {
      font-size: 1.5rem;
    }

    h4 {
      font-size: 1.25rem;
    }

    h5 {
      font-size: 1.1rem;
    }

    h6 {
      font-size: 1rem;
      color: #666;
    }

    /* 段落 */
    p {
      margin: 1.25rem 0;
    }

    /* リンク */
    a {
      color: #007acc;
      text-decoration: none;
      border-bottom: 1px dashed transparent;
      transition: border-bottom 0.2s;

      &:hover,
      &:focus {
        border-bottom: 1px dashed #007acc;
      }
    }

    /* 箇条書き */
    ul,
    ol {
      margin: 0.5rem 0;
      padding-left: 1rem;

      li {
        margin-bottom: 0.5rem;
      }
    }

    /* Unordered List: ドット表示 */
    ul {
      list-style-type: disc;
    }

    /* Ordered List: 番号付き */
    ol {
      list-style-type: decimal;
    }

    /* 引用 */
    blockquote {
      margin: 1.5rem 0;
      padding: 1rem 1.5rem;
      background-color: #f9f9f9;
      border-left: 4px solid #ccc;
      font-style: italic;
      color: #555;

      p {
        margin: 0;
      }
    }

    /* コードブロック */
    pre {
      background-color: #f5f5f5;
      padding: 1rem;
      border-radius: 4px;
      overflow-x: auto;
      margin: 1.5rem 0;

      code {
        font-family: "Fira Code", monospace;
        background: none;
        padding: 0;
        color: inherit;
      }
    }

    /* インラインコード */
    code {
      font-family: "Fira Code", monospace;
      background-color: #f0f0f0;
      color: #c7254e;
      padding: 0.2em 0.4em;
      border-radius: 3px;
    }

    /* テーブル */
    table {
      width: 100%;
      border-collapse: collapse;
      margin: 1.5rem 0;

      th,
      td {
        border: 1px solid #ddd;
        padding: 0.75rem;
        text-align: left;
      }

      th {
        background-color: #fafafa;
      }
    }

    /* 画像 */
    img {
      max-width: 100%;
      display: block;
      margin: 1.5rem auto;
    }

    /* 上付き文字 */
    sup {
      font-size: 0.75em;
      vertical-align: super;
    }

    /* 水平線 */
    hr {
      border: none;
      border-top: 1px solid #eaeaea;
      margin: 2rem 0;
    }

    strong {
      font-weight: 700;
    }

    em {
      font-style: italic;
    }

    del,
    s {
      text-decoration: line-through;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const headings = document.querySelectorAll(
      ".postContent h2, .postContent h3, .postContent h4, .postContent h5, .postContent h6"
    );
    headings.forEach(headingEl => {
      const heading = headingEl as HTMLElement;
      if (heading.id) {
        heading.style.cursor = "pointer";

        const linkIcon = document.createElement("img");
        linkIcon.src = "/icons/link.svg";
        linkIcon.className = "heading-link-icon";
        linkIcon.alt = "link";
        heading.appendChild(linkIcon);

        heading.addEventListener("click", event => {
          event.preventDefault();
          heading.scrollIntoView({ behavior: "smooth" });
          history.replaceState(null, "", `#${heading.id}`);
        });
      }
    });
  });
</script>
